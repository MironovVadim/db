---
- name: Create
  hosts: localhost
  connection: local
  gather_facts: False
  no_log: no
  vars:
    molecule_file: "{{ lookup('env', 'MOLECULE_FILE') }}"
    molecule_instance_config: "{{ lookup('env', 'MOLECULE_INSTANCE_CONFIG') }}"
    molecule_yml: "{{ lookup('file', molecule_file) | from_yaml }}"

    ssh_port: 22
    ssh_user: "{{ lookup('env', 'USER') }}"
    ssh_identity_file: "{{ lookup('env', 'HOME') }}/.ssh/google_compute_engine"
  tasks:
    - name: debug
      command: printenv
    - name: Create molecule instance(s)
      gcp_compute_instance:
        auth_kind: serviceaccount
#        name: "{{ item.value.name }}"
#        project: "{{ lookup('env', 'GCE_PROJECT_ID') }}"
#        zone: "{{ item.value.zone }}"
#        machine_type: "{{ item.value.machine_type }}"
        name: instance-travis
        project: "{{ lookup('env', 'GCE_PROJECT_ID') }}"
        zone: europe-west1-d
        machine_type: f1-micro
        service_account_file: "{{ lookup('env', 'GCE_SERVICE_ACCOUNT_FILE') }}"
        disks:
          - initialize_params:
              source_image: ubuntu-1604-xenial-v20170919
      #  credentials_file: "{{ lookup('env', 'GCE_CREDENTIALS_FILE') }}"
      register: server
#      loop: "{{ lookup('molecule_yml', platforms, wantlist=True) }}"

    # Mandatory configuration for Molecule to function.

    - name: Populate instance config dict
      set_fact:
        instance_conf_dict: {
          'instance': "{{ item.instance_data[0].name }}",
          'address': "{{ item.instance_data[0].public_ip }}",
          'user': "{{ ssh_user }}",
          'port': "{{ ssh_port }}",
          'identity_file': "{{ ssh_identity_file }}", }
      with_items: "{{ server.results }}"
      register: instance_config_dict
      when: server.changed | bool

    - name: Convert instance config dict to a list
      set_fact:
        instance_conf: "{{ instance_config_dict.results | map(attribute='ansible_facts.instance_conf_dict') | list }}"
      when: server.changed | bool

    - name: Dump instance config
      copy:
        # NOTE(retr0h): Workaround for Ansible 2.2.
        #               https://github.com/ansible/ansible/issues/20885
        content: "{{ instance_conf | to_json | from_json | molecule_to_yaml | molecule_header }}"
        dest: "{{ molecule_instance_config }}"
      when: server.changed | bool

    - name: Wait for SSH
      wait_for:
        port: "{{ ssh_port }}"
        host: "{{ item.address }}"
        search_regex: SSH
        delay: 10
      with_items: "{{ lookup('file', molecule_instance_config) | from_yaml }}"